version: '3.8'

services:
    ### DATABASE ###
    postgres:
        container_name: postgres
        image: postgres:latest
        restart: on-failure
        volumes:
            - dbdata:/data/postgres
            - "./migrations/.postgres:/docker-entrypoint-initdb.d"
        networks: 
            - database
        env_file:
            - ".env"
           
    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:latest
        restart: always
        depends_on:
            - postgres
        ports:
            - "${PGADMIN_PORT}:80"
        volumes:
            - pgdata:/root/.pgadmin
        networks: 
            - database
        env_file:
            - ".env"
    
    ## ENVOY PROXY ###
    envoy:
        container_name: tpauth-envoy
        image: localhost/alvidir/tpauth:0.2.0-envoy
        restart: always
        ports:
            - "8080:8080"
            - "9901:9901"
        networks:
            - ingress
        
    ## BACKEND ###
    tpauth:
        container_name: tpauth-server
        image: localhost/alvidir/tpauth:0.2.0-server
        restart: always
        networks: 
            - ingress
            - database
        depends_on: 
            - postgres
            - envoy
        env_file:
            - .env

networks:
    # Ingress network works as bridge between envoyproxy and the available services
    ingress:
        name: ingress
        driver: bridge
 
    # Database network is the bridge between domain environment and the sql databases
    database:
        name: database
        driver: bridge

volumes:
    dbdata:
    pgdata: